{"ast":null,"code":"var _jsxFileName = \"/Users/Hanna/Documents/Technigo/Week_9/project-music-releases/code/src/MusicElement.js\";\nimport React from 'react';\nimport data from './data.json';\nimport MusicAlbumcover from './MusicAlbumcover';\nimport MusicText from './MusicText';\nconsole.log(data); //Component for each album-item\n//Should we do a map-function here? 8:04 in video.\n\nconst MusicElement = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, data.albums.items.map(item => /*#__PURE__*/React.createElement(MusicAlbumcover, {\n    key: item.id //Kolla upp key!\n    ,\n    image: item.images[1].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, data.albums.items.map(item => /*#__PURE__*/React.createElement(MusicText, {\n    key: item.id,\n    album: item.name,\n    artist: item.artists[0].name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default MusicElement;","map":{"version":3,"sources":["/Users/Hanna/Documents/Technigo/Week_9/project-music-releases/code/src/MusicElement.js"],"names":["React","data","MusicAlbumcover","MusicText","console","log","MusicElement","props","albums","items","map","item","id","images","url","name","artists"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,E,CACA;AACA;;AACA,MAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9B,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,iBACrB,oBAAC,eAAD;AACA,IAAA,GAAG,EAAEA,IAAI,CAACC,EADV,CAEA;AAFA;AAGA,IAAA,KAAK,EAAED,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,GAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,iBACrB,oBAAC,SAAD;AACA,IAAA,GAAG,EAAEA,IAAI,CAACC,EADV;AAEA,IAAA,KAAK,EAAED,IAAI,CAACI,IAFZ;AAGA,IAAA,MAAM,EAAEJ,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBD,IAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAXF,CADF;AAwBD,CAzBD;;AA2BA,eAAeT,YAAf","sourcesContent":["import React from 'react'\nimport data from './data.json'\nimport MusicAlbumcover from './MusicAlbumcover'\nimport MusicText from './MusicText'\n\nconsole.log(data)\n//Component for each album-item\n//Should we do a map-function here? 8:04 in video.\nconst MusicElement = (props) => {\n  return (\n    <>\n      <div>\n        {data.albums.items.map((item) => (\n          <MusicAlbumcover\n          key={item.id}  \n          //Kolla upp key!\n          image={item.images[1].url}\n          /> \n        ))}\n        \n      </div>\n      <div>\n        {data.albums.items.map((item) => (\n          <MusicText \n          key={item.id}\n          album={item.name}\n          artist={item.artists[0].name}\n          />\n        ))}\n        \n      </div>\n    </>\n  )\n}\n\nexport default MusicElement;"]},"metadata":{},"sourceType":"module"}